{"version":3,"sources":["components/card/Card.js","components/cardList/CardList.js","components/searchBox/SearchBox.js","Scroll.js","App.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","cardArray","robots","map","robot","key","SearchBox","searchChange","onChange","type","placeholder","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"uOAgBeA,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACvB,OACE,yBAAKC,UAAU,uDACX,yBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,mBACtB,6BACE,4BAAKC,GACL,2BAAIC,MCIGI,EATE,SAAC,GAAgB,IACxBC,EADuB,EAAbC,OACSC,KAAI,SAACC,GAC1B,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAMV,GAAIA,GAAIU,EAAMV,GAAIC,KAAMS,EAAMT,KAAMC,MAAOQ,EAAMR,WAE7E,OAAO,6BAAMK,ICMFK,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,yBAAKV,UAAU,OACb,2BACEW,SAAUD,EACVE,KAAK,SACLC,YAAY,gBACZb,UAAU,uCCMHc,EAdA,SAAAC,GACb,OACE,yBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,UAGTJ,EAAMK,WCsCEC,G,wBAzCb,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KAaRO,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXvB,OAAQ,GACRoB,YAAa,IAJE,E,iFAQE,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEnB,OAAQ4B,S,+BAOjC,IAAD,OACDC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA7B,GAC9C,OAAOA,EAAMT,KACVuC,cACAC,SAAS,EAAKV,MAAMH,YAAYY,kBAGrC,OAAiC,IAA7BF,KAAKP,MAAMvB,OAAOkC,OACb,0CAGL,yBAAKvC,UAAU,MACb,wBAAIA,UAAU,SAAd,kBACA,kBAAC,EAAD,CAAWU,aAAcyB,KAAKb,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUjB,OAAQ6B,U,GAlCZM,c,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6b42a8bc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n// On reçoit en tant que Props chaque ID, name, email de chaque robot que l'on va afficher\r\n\r\nconst Card = ({id, name, email}) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n        <img alt=\"robot\" src={`https://robohash.org/${id}?size=200x200`}/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\"\r\nimport Card from \"../card/Card.js\"\r\n\r\n// On reçoit en props tout nos robots, et on va itérer à travers notre liste de robots.\r\n// A chaque itération, on renvoit un robot de notre composant Card en lui donnant des props id, name et email\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardArray = robots.map((robot) => {\r\n        return <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email} />\r\n    })\r\n    return <div>{cardArray}</div>\r\n}\r\n\r\n\r\n\r\nexport default CardList","import React from \"react\";\r\n\r\n// Notre input component\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        onChange={searchChange}\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = props => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"2px solid black\",\r\n        height: \"800px\"\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\nimport CardList from \"./components/cardList/CardList.js\";\nimport SearchBox from \"./components/searchBox/SearchBox.js\";\nimport Scroll from \"./Scroll.js\";\nimport \"./App.css\";\nimport \"tachyons\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      robots: [],\n      searchfield: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }));\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name\n        .toLowerCase()\n        .includes(this.state.searchfield.toLowerCase());\n    });\n\n    if (this.state.robots.length === 0) {\n      return <h2>Loading...</h2>;\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1 className=\"title\"> RobotsFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <CardList robots={filteredRobots} />\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}